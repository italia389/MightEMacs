<home>    <exit>


~bSummary~B

Following is a summary of MightEMacs concepts and commands, grouped by section.

================================================================================
                                ~bTHE VERY BASICS~B
~uC-x~U means hold down ~ucontrol~U and press the ~ux~U key.  ~uC-SPC~U is ~ucontrol~U + spacebar.
Other mnemonics are ~uESC~U for ~uesc~U key, ~uRTN~U for ~ureturn~U key, ~uTAB~U for ~utab~U key, and
~uDEL~U for ~udelete~U key.  The "meta" key is ~uESC~U or ~uC-[~U.  ~uC-g~U ("control" + "g") aborts
almost any operation.  ~#uESC e~U or ~#uC-x C-c~U will get you out of MightEMacs.

Most commands accept an optional numeric prefix (~uC-u~U or ~uC--~U + digits) which
generally is a repeat count and/or a direction: - is left or up, + is right or
down.  Pressing ~uC-u~U repeatedly generates the sequence 2, 0, 3, 4, 5...
(generally increases the value) and ~uC--~U decreases it, beginning at -1.  The
numeric prefix is then applied to the next key or key sequence entered; for
example, ~uC-u~U ~#uESC f~U would move the cursor two words forward.  Note that ~uC--~U is
~ucontrol~U + ~u_~U ("control" + "underscore").  It can be entered without holding down
the ~ushift~U key, e.g., ~ucontrol~U + ~u-~U ("control" + "dash").

A BUFFER is a named area containing a FILE being edited, and is displayed in a
WINDOW.  Many buffers may be active at once.  Likewise, multiple windows may be
active at once on a SCREEN.  All windows may show different parts of the same
buffer, or each may show a different buffer.  Multiple screens may be created as
well and directly overlap each other.  Each has its own set of windows (and
working directory) and eases the task of viewing and editing many buffers.  The
POINT is the current entry position in a buffer; that is, where the cursor is on
the screen.

MightEMacs uses "pop-up" windows for many purposes; for example, to display a
file or list (like buffers or commands).  Press ~u?~U at the prompt to see the
paging commands.  To exit a pop-up display, press ~uq~U or ~uESC~U.

Abort command .................... ~uC-g~U    Show commands .................. ~#uC-h c~U
Positive numeric prefix .......... ~uC-u~U    Show key ....................... ~#uC-h ?~U
Negative numeric prefix .......... ~uC--~U    Show buffers ................... ~#uC-h b~U
Exit MightEMacs ..... ~#uC-x C-c~U or ~#uESC e~U    About MightEMacs ............... ~#uC-h A~U
Save all changes and exit ...... ~#uESC z~U    Help ........................... ~#uESC ?~U

================================================================================
                                ~bCURSOR MOVEMENT~B

Go to line ..................... ~#uESC g~U    Go to mark ................... ~#uESC SPC~U
Beginning of line text ....... ~#uESC C-a~U    Traverse (jump across) line ...... ~uC-t~U

---------- Backward Motion -----------    ---------- Forward Motion ------------
Backward char .... <left-arrow> or ~uC-b~U    Forward char ...  <right-arrow> or ~uC-f~U
Backward word .................. ~#uESC b~U    Forward word ................... ~#uESC f~U
Beginning of line ................ ~uC-a~U    End of line ...................... ~uC-e~U
Backward line ...... <up-arrow> or ~uC-p~U    Forward line ..... <down-arrow> or ~uC-n~U
Backward page .................... ~uC-z~U    Forward page ..................... ~uC-v~U
Beginning of buffer ............ ~#uESC <~U    End of buffer .................. ~#uESC >~U

================================================================================
                      ~bDELETING, INSERTING, AND FORMATTING~B
"Copy" and "kill" commands save text in the kill ring for later yanking,
"deletes" do not.  However, deleted text can be restored with the "undelete" and
"undeleteCycle" commands.  In general, copy commands have a ~uC-c~U (copy) prefix,
kill commands have a ~uC-h~U (homicide) prefix, and delete commands have no prefix.
To yank older kills, "yank" first, then immediately "yankCycle" one or more
times.  You may also specify a negative numeric prefix to yank older kills. Most
of the following commands will operate on multiple items forward or backward if
given a + or - numeric prefix.

Delete backward character ........ ~uDEL~U    Newline ................... ~uRTN~U or ~uC-m~U
Delete forward character .. [x> or ~uC-d~U    Newline and indent ..............  ~uC-j~U
Delete word ...................... C-\    Handle (insert) tab ....... ~uTAB~U or ~uC-i~U
Delete to line break ............. ~uC-k~U    Insert space(s) ahead ........ ~#uC-x SPC~U
Delete line ...................... ~uC-l~U    Open line ........................ ~uC-o~U
Copy word .................... ~#uC-c C-\~U    Open line and indent ........... ~#uC-x o~U
Copy to line break ........... ~#uC-c C-k~U    Upper case word .............. ~#uESC C-u~U
Copy line .................... ~#uC-c C-l~U    Upper case line .............. ~#uC-x C-u~U
Duplicate line ................. ~#uESC d~U    Lower case word .............. ~#uESC C-l~U
Kill word .................... ~#uC-h C-\~U    Lower case line .............. ~#uC-x C-l~U
Kill to line break ........... ~#uC-h C-k~U    Title case word .............. ~#uESC C-t~U
Kill line .................... ~#uC-h C-l~U    Title case line .............. ~#uC-x C-t~U
Delete white space ............. ~#uESC \~U    Yank ............................. ~uC-y~U
Delete blank lines ........... ~#uC-x C-o~U    Yank cycle (next kill) ....... ~#uESC C-y~U
Trim line .................... ~#uC-x C-\~U    Cycle kill ring ................ ~#uC-c k~U
Detab line ................... ~#uC-x C-d~U    Show kill ring ................. ~#uC-h k~U
Entab line ................... ~#uC-x C-e~U    Delete kill .................... ~#uC-x k~U
Quote character .................. ~uC-q~U    Undelete ....................... ~#uESC u~U
Set wrap column ................ ~#uESC w~U    Undelete cycle ................. ~#uESC U~U

================================================================================
                                ~bREGION COMMANDS~B
A region is the area of text between mark ' ' and the current position (point).

Set mark ....................... ~uC-SPC~U    Delete region .................... ~uC-w~U
Swap point and mark .......... ~#uC-x C-x~U    Copy region .................. ~#uC-c C-w~U
Upper case region .............. ~#uC-x u~U    Kill region .................. ~#uC-h C-w~U
Lower case region .............. ~#uC-x l~U    Indent region (n tab stops) .... ~#uESC )~U
Title case region .............. ~#uC-x t~U    Outdent region (n tab stops) ... ~#uESC (~U

================================================================================
                            ~bSEARCHING AND REPLACING~B

Search forward ................... ~uC-s~U    Search backward .................. ~uC-r~U
Hunt forward ..................... ~uC-]~U    Hunt backward .................... ~uC-^~U
Replace string ................. ~#uESC r~U    Show search ring ............... ~#uC-h s~U
Query replace string ........... ~#uESC q~U    Show replace ring .............. ~#uC-h r~U
                                          Delete search pattern .......... ~#uC-x s~U
Query replace all ............ ~#uESC C-q~U    Delete replace pattern ......... ~#uC-x r~U

================================================================================
                                ~bFILE COMMANDS~B
Press ~utab~U when entering a filename to see a match list.  Slash, ~~username, and
$var are expanded.  Enter ~uC-g~U to abort.

Find file .................... ~#uC-x C-f~U    Save file .................... ~#uC-x C-s~U
View file .................... ~#uC-x C-v~U    Write file ................... ~#uC-x C-w~U
Read file .................... ~#uC-x C-r~U    Append file .................. ~#uC-x C-a~U
Insert file .................. ~#uC-x C-i~U    Change file name ............... ~#uC-x F~U
Read pipe ...................... ~#uC-x ~~~U    Find multiple files ............ ~#uC-x f~U
Insert pipe .................... ~#uC-x `~U    Find file in new screen ...... ~#uC-x C-g

================================================================================
                            ~bMODE AND FENCE COMMANDS~B
Buffer modes apply to individual buffers; global modes apply to all buffers.
Press ~utab~U when entering a mode name to see a match list.  Language modes
activate automatic indentation and fence matching.  Fences pairs are (), [], {},
and <>.  Use a numeric prefix to -1 (clear), 0 (toggle - default), 1 (set), or 2
(clear all and set) a mode.

Change mode .................... ~#uESC m~U    Delete fenced region ........... ~#uC-x '~U
Go to matching fence ........... ~#uESC '~U    Copy fenced region ............. ~#uC-c '~U
Show matching fence .......... C-h C-h    Kill fenced region ............. ~#uC-h '~U
-------------------------- ~bCOMMONLY USED GLOBAL MODES~B --------------------------
ASave   Save to disk periodically         Exact     Case-sensitive searching
ATerm   Add newline at EOF when saving    Fence[12] Show matching fence
Bak     Create backup file                Regexp    Regular expression searching
-------------------------- ~bCOMMONLY USED BUFFER MODES~B --------------------------
Line    Display line number in mode line  Over    Overwrite text, "push" tabs
Wrap    Automatic newline while typing    Repl    Overwrite text and tabs

Additionally, the language buffer modes (C, C++, HTML, Java, JS, Memacs, Perl,
PHP, Python, Ruby, Shell, Swift) are commonly used.

================================================================================
                                ~bWINDOW COMMANDS~B

Reframe window ................. ~#uESC l~U    Next window .................... ~#uC-x n~U
Split current window ........... ~#uC-x 2~U    Previous window ................ ~#uC-x p~U
Only window (delete others) .... ~#uC-x 1~U    Select window .................. ~#uC-x w~U
Delete window .................. ~#uC-x 0~U    Move window up ............... ~#uC-x C-p~U
Join windows ................... ~#uC-x j~U    Move window down ............. ~#uC-x C-n~U
Resize window .................. ~#uC-x z~U    Backward page previous ....... ~#uC-h C-z~U
Grow window .................... ~#uC-x +~U    Forward page previous ........ ~#uC-h C-v~U
Shrink window .................. ~#uC-x -~U    Backward page next ........... ~#uESC C-z~U
                                          Forward page next ............ ~#uESC C-v~U

================================================================================
                                ~bBUFFER COMMANDS~B
Press ~utab~U when entering a buffer name to see a match list.

Previous buffer ................ ~#uC-x [~U    Change buffer name ............. ~#uC-x B~U
Next buffer .................... ~#uC-x ]~U    Truncate buffer ................ ~#uESC t~U
Last buffer on current screen .. ~#uC-x \~U    Clear buffer ................. ~#uC-x DEL~U
Select buffer .................. ~#uC-x b~U    Insert buffer .................. ~#uC-x ^~U
Delete buffer ................ ~#uC-x C-b~U    Unchange buffer ................ ~#uESC ~~~U
Narrow buffer .................. ~#uC-x <~U    Mark whole buffer .......... ~#uESC C-SPC~U
Widen buffer ................... ~#uC-x >~U    Show point position ............ ~#uC-h .~U
Create scratch buffer .......... ~#uC-x #~U    Show buffers ................... ~#uC-h b~U
Pipe buffer .................... ~#uC-x |~U

================================================================================
                                ~bSCREEN COMMANDS~B
Screens maintain their own working directory.

Select screen .................. ~#uESC s~U    Previous screen ................ ~#uESC [~U
Delete screen ................ ~#uESC C-d~U    Next screen .................... ~#uESC ]~U
Show screens ................... ~#uC-h S~U

================================================================================
                                  ~bKEY MACROS~B
"REC" is displayed on mode line when a macro is being recorded.  You will be
prompted for a macro name when recording is completed.  Press ~utab~U when entering
a macro name to see a match list.

Begin recording macro .......... ~#uC-x (~U    Rename macro ................... ~#uC-x N~U
End recording macro ............ ~#uC-x )~U    Delete macro ................... ~#uC-x M~U
Execute macro .................. ~#uC-x e~U    Edit macro ..................... ~#uESC M~U
Cycle macro ring ............... ~#uC-c M~U    Save macro ring to a file .... ~#uESC C-s~U
Show macro ring ................ ~#uC-h M~U

================================================================================
                        ~bACCESSING THE OPERATING SYSTEM~B

Shell .......................... ~#uC-x $~U   Start a new shell
Shell command .................. ~#uC-x !~U   Execute a shell command line
Suspend MightEMacs ........... ~#uC-x C-z~U   Suspend MightEMacs and return to shell
Read pipe ...................... ~#uC-x ~~~U   Read pipeline result into cur. buffer
Pipe buffer .................... ~#uC-x |~U   Feed current buffer through a pipeline
Insert pipe .................... ~#uC-x `~U   Insert pipeline result into cur. buffer
Show directory ................. ~#uC-h D~U   Display working directory on msg. line
Change directory ............... ~#uC-c D~U   Change working directory

================================================================================
                            ~bVARIABLES AND SCRIPTS~B
Press ~utab~U when entering a variable name to see a match list.

Show variables ................. ~#uC-h v~U   Execute (eval) command line ... ~#uESC C-x~U
Show variable on message line .. ~#uC-h =~U   Execute buffer .................. ~#uC-x x~U
Assign variable ................ ~#uESC =~U   Execute file .................... ~#uC-x /~U
Show functions ................. ~#uC-h f~U

================================================================================
                                ~bMISCELLANEOUS~B
Press ~utab~U when entering a command, buffer, or filename to see a match list.

Execute (run) command .......... ~#uESC x~U   Bind command to a key ........... ~#uESC k~U
Pop up a buffer ................ ~#uC-h p~U   Unbind a key .................. ~#uESC C-k~U
Pop up a file ................ ~#uC-h C-p~U

================================================================================


<home>    <exit>
