~bLibrary Packages~B

Following is the complete list of the library commands available for interactive
use.  Language-specific commands and functions are loaded, activated, and
deactivated automatically when buffers, filenames, or modes are changed.  For
all other commands, note the following:

  * The word processing commands are activated if the $EndSentence variable is
    set to a non-empty value in "site.ms".
  * The block-processing and macro packages can be loaded by uncommenting the
    appropriate line(s) in "site.ms" or by adding ~brequire~B statements to the
    user startup file ".memacs".

See the ~bshowCommands~B (~#uC-h c~U) or ~bshowKey~B (~#uC-h ?~U) displays for details.  A
brief description of each command is presented here.

--------------------------------------------------------------------------------
~bGENERAL USE~B                                     (defined in "memacs.ms")

chgIndent           ~#uC-c TAB~U     Change indentation at beginning of current
                                line without moving point.
enumLine            ~#uESC #~U       Insert sequential numbers at beginning of all
                                lines in a block.
fenceWord           ~#uESC "~U       Wrap a pair of fence characters around one or
                                more words at point.
findFiles           ~#uC-x f~U    	Open all files matching a shell template and
                                optionally, also matching a search pattern.
getFile             ~#uC-x C-g~U    	Find a file and open it in a new screen.  If
                                n <= 0, also set its buffer to read-only.
indentLine          ~#uC-c )~U
outdentLine         ~#uC-c (~U       Indent or outdent a block of lines.
joinLines0          ~#uC-x C-j~U     Join lines with no spacing in between.
nextGrepBuf         ~#uC-c ]~U
prevGrepBuf         ~#uC-c [~U       Switch to next or previous buffer from result of
                                most recent ~bfindFiles~B invocation.  If n < 0,
                                also delete buffer that was exited from.
nextHomeBuf         ~#uC-h ]~U
prevHomeBuf         ~#uC-h [~U       Switch to next or previous "homed" buffer.  If
				n < 0, also delete buffer that was exited from.
popFileList         ~#uC-h l~U       Display a directory listing in a pop-up window.
queryReplaceAll     ~#uESC C-q~U     Invoke the ~bqueryReplace~B command on multiple
                                buffers in succession.
showBindings        ~#uC-h n~U       Display all possible key bindings and what they
                                are bound to in a pop-up window.
showVar             ~#uC-h =~U       Display a variable name and its value on the
                                message line.
trimBuf             ~#uESC C-\~U     Trim white space from end of all lines in
                                current buffer.
unchangeBuf         ~#uESC ~~~U       Clear the "changed" attribute of the current
                                buffer.

--------------------------------------------------------------------------------
~bWORD PROCESSING~B                                 (defined in "memacs.ms")

wpJoinLines         ~#uC-c C-j~U     Join lines with extra spacing in between.
wpWrapLine          ~#uC-c RTN~U     Wrap line(s) with extra spacing in between.

--------------------------------------------------------------------------------
~bBLOCK PROCESSING~B                                (defined in "blockFormat.ms")

bfFormatItem        ~#uESC .~U       Format a block of comment lines or one numbered
                                list item.
bfFormatList        ~#uESC L~U       Format a sequence of numbered list items.

--------------------------------------------------------------------------------
~bKEY MACROS~B                                      (defined in "macroUtil.ms")

editMacro           ~#uESC M~U       Display a macro in a temporary buffer so that it
                                can be edited and updated.
saveMacros          ~#uESC C-s~U     Save macro ring to disk, in file
                                ~~/.memacs-macros.  (File is loaded automatically
                                at startup if it exists.)

--------------------------------------------------------------------------------
~bC LANGUAGE~B                                      (defined in "cLib.ms")

cFindFunc           ~#uC-c C-f~U     Find a function definition in a source file.

--------------------------------------------------------------------------------
~bC++ LANGUAGE~B                                    (defined in "cppLib.ms")

cppFindClass        ~#uC-c C-c~U     Find a class definition in a source file.
cppFindFunc         ~#uC-c C-f~U     Find a function definition in a source file.

--------------------------------------------------------------------------------
~bJAVA LANGUAGE~B                                   (defined in "javaLib.ms")

javaFindClass       ~#uC-c C-c~U     Find a class definition in a source file.
javaFindFunc        ~#uC-c C-f~U     Find a function definition in a source file.

--------------------------------------------------------------------------------
~bJAVASCRIPT~B                                      (defined in "jsLib.ms")

jsFindFunc          ~#uC-c C-f~U     Find a function definition in a script file.

--------------------------------------------------------------------------------
~bMSCRIPT~B                                         (defined in "msLib.ms")

msFindRoutine       ~#uC-c C-f~U     Find a command or function definition in a
                                script file.
msGotoBlockEnd      ~#uC-c C-g~U     Go to matching block end point.
msWrapIf0           ~#uESC 0~U       Wrap ~#uif 0~U and ~uendif~U around a block of lines.
msWrapIf1           ~#uESC 1~U       Wrap ~#uif 1~U and ~uendif~U around a block of lines.
msWrapIfElse        ~#uESC 2~U       Wrap ~#uif 0~U and ~uelse~U around a block of lines,
                                duplicate them, and add ~uendif~U.

--------------------------------------------------------------------------------
~bPERL SCRIPT~B                                     (defined in "perlLib.ms")

perlFindSub         ~#uC-c C-f~U     Find a subroutine definition in a script file.

--------------------------------------------------------------------------------
~bPHP SCRIPT~B                                      (defined in "phpLib.ms")

phpFindClass        ~#uC-c C-c~U     Find a class definition in a script file.
phpFindFunc         ~#uC-c C-f~U     Find a function definition in a script file.

--------------------------------------------------------------------------------
~bPYTHON SCRIPT~B                                   (defined in "pythonLib.ms")

pythonFindFunc      ~#uC-c C-f~U     Find a function definition in a script file.

--------------------------------------------------------------------------------
~bRUBY SCRIPT~B                                     (defined in "rubyLib.ms")

rubyFindCM          ~#uC-c C-c~U     Find a class or module definition in a script
                                file.
rubyFindMethod      ~#uC-c C-f~U     Find a method definition in a script file.
rubyGotoBlockEnd    ~#uC-c C-g~U     Go to matching block end point.
rubyWrapBeginEnd    ~#uESC 0~U       Wrap ~u=begin~U and ~u=end~U around a block of lines.

--------------------------------------------------------------------------------
~bRUST LANGUAGE~B                                   (defined in "rustLib.ms")

rustFindFunc        ~#uC-c C-f~U     Find a function definition in a source file.
rustFindMod         ~#uC-c C-c~U     Find a module definition in a source file.

--------------------------------------------------------------------------------
~bSHELL SCRIPT~B                                    (defined in "shLib.ms")

shGotoIfEndif       ~#uC-c C-g~U     Go to matching ~u#if...~U or ~u#endif~U.
shWrapIf0           ~#uESC 0~U       Wrap ~#u#if 0~U and ~u#endif~U around a block of lines.
shWrapIf1           ~#uESC 1~U       Wrap ~#u#if 1~U and ~u#endif~U around a block of lines.
shWrapIfElse        ~#uESC 2~U       Wrap ~#u#if 0~U and ~u#else~U around a block of lines,
                                duplicate them, and add ~u#endif~U.

--------------------------------------------------------------------------------
~bSWIFT LANGUAGE~B                                  (defined in "swfLib.ms")

swfFindFunc         ~#uC-c C-f~U     Find a function definition in a source file.

--------------------------------------------------------------------------------
~bPREPROCESSOR (C, C++, Swift)~B                    (defined in "ppLib.ms")

ppDeletePPLines     ~#uC-c #~U       Remove conditional preprocessor lines.
ppGotoIfEndif       ~#uC-c C-g~U     Go to matching ~u#if...~U or ~u#endif~U.
ppWrapIf0           ~#uESC 0~U       Wrap ~#u#if 0~U and ~u#endif~U around a block of lines.
ppWrapIf1           ~#uESC 1~U       Wrap ~#u#if 1~U and ~u#endif~U around a block of lines.
ppWrapIfElse        ~#uESC 2~U       Wrap ~#u#if 0~U and ~u#else~U around a block of lines,
                                duplicate them, and add ~u#endif~U.
ppWrapIfName0       ~#uC-c 0~U       Wrap ~#u#if !~UNAME and ~u#endif~U around a block of
                                lines.
ppWrapIfName1       ~#uC-c 1~U       Wrap ~u#if~U NAME and ~u#endif~U around a block of
                                lines.
ppWrapIfElseName    ~#uC-c 2~U       Wrap ~u#if~U NAME and ~u#else~U around a block of lines,
                                duplicate them, and add ~u#endif~U.
ppWrapList          ~#uC-c ,~U       Format a block of lines containing identifiers
                                separated by commas.

