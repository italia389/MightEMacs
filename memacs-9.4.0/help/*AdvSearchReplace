~bSearching and Replacing~B

MightEMacs provides several commands for searching through text in a buffer and
also for replacing text that matches a pattern.  To search the current buffer
for a string that matches a pattern, the "searchForw" (~uC-s~U) or "searchBack"
(~uC-r~U) command is used.  You will be prompted to enter the pattern.  The pattern
is delimited by ~uESC~U by default so that ~uRTN~U can be entered as part of the
pattern.  This can be changed however, by setting the $searchDelim variable to
~uRTN~U or a different delimiter key.  If you set it to ~uRTN~U, you could then enter
~#uC-q C-j~U to make a line delimiter (newline) part of the pattern.  (Note that
~#uC-q RTN~U would not work because ~uC-q~U quotes characters literally during input and
thus, ~#uC-q RTN~U would generate a "\r" character, not "\n".)

Once a pattern has been set, the "huntForw" (~uC-]~U) and "huntBack" (~uC-^~U) commands
may be used in any combination to search for the next or previous occurrence.
The search pattern is saved in the "search ring" (if different than any other
entry) and in the $searchPat variable.

To find and replace text, the "replace" (~#uESC r~U) or "queryReplace" (~#uESC q~U)
command is used.  To replace a fixed number of occurrences of a pattern, specify
a numeric prefix to either command.  For the "replace" command, the default
action is to replace all occurrences from the point to the end of the buffer.
The "queryReplace" command works like "replace" but prompts for an action to
take each time a match is found, and also after the last match is found.  You
can enter ~u?~U at the prompt to get a list.  Actions include: skipping to the next
occurrence, undoing the last replacement and reprompting at that location,
restarting from the beginning, stopping and returning to the starting point, and
replacing all remaining matches without prompting.  In all cases, either command
will stop if a match is not found.  The replace pattern is saved in the "replace
ring" and in the $replacePat variable.

Search and replace patterns are remembered when new ones are entered
interactively or when patterns are set by assigning a value to the $searchPat or
$replacePat variable.  The patterns are saved in the search and replace rings in
the same manner as copied and killed text is saved in the kill ring, except that
duplicate entries are not saved to mitigate clutter.  You can recall a previous
pattern via the "cycleSearchRing" (~#uC-c s~U) and "cycleReplaceRing" (~#uC-c r~U)
commands.  These work just like the  "cycleKillRing" command: positive n cycles
the ring forward n times (bringing the most recent pattern(s) to the top);
negative n cyles the ring backward.  The pattern that ends up on top is then set
as the current pattern.

You can also recall a previous pattern whenever you are being prompted to enter
a pattern; that is, whenever you invoke the "searchForw", "searchBack",
"replace", or "queryReplace" command interactively.  The input area on the
message line will be empty initially.  To display the current pattern or a
previous pattern, you enter ~uC-p~U or ~uup-arrow~U.  The first time you do this, the
top ring entry (current pattern) is brought into the input buffer.  On each
subsequent key press, the ring is cycled and the next entry is brought into the
input buffer, replacing the previous one.  You may repeat this process as often
as you like to see the next older entries in sequence.  You may also cycle the
ring in the opposite direction by entering ~uC-n~U or ~udown-arrow~U.  Once you have
found the pattern you want, you can edit it or just press the delimiter key as
usual to set the pattern and execute the command.

You can view the search or replace ring at any time by entering ~#uC-h s~U
(showSearchRing) or ~#uC-h r~U (showReplaceRing).  You can also delete any or all
entries via the "delSearchPat" (~#uC-x s~U) and "delReplacePat" (~#uC-x r~U) commands,
which operate in the same manner as the "delKillEntry" (~#uC-x k~U) command.  See the
"showCommands" (~#uC-h c~U) descriptions for details.

The maximum sizes of the search and replace rings are controlled by the
$searchRingSize and $replaceRingSize system variables, which both default to 20.
To change a ring size, set the corresponding variable to a new integer value.
If it is set to zero, the ring is of unlimited size.  Note that you cannot set
either variable to a value that is less than the current number of entries in
the corresponding ring.  You must delete one or more entries first.

There is one additional search and replace option: the "queryReplaceAll" macro
(~#uESC C-q~U).  This macro performs a "queryReplace" on every visible buffer in the
current editing session, pausing from one to the next to display results and
give you the option to continue or quit.  It also can be preceded by the
"findFiles" macro (~#uC-x f~U) to open all files matching a shell glob pattern, or
only those matching the shell pattern and also containing a plain text (fgrep)
or regular expression (egrep) pattern.  This gives you the ability to find files
containing a pattern and then doing a mass search and replace on those files
interactively.  For the "findFiles" macro, you simply append zero or more of the
standard option characters to the pattern to control the type of grep filtering
that is done; for example, you can append ":r" to perform an RE search (enter
~#uC-h ? C-x f~U for details).  You may also use a negative numeric prefix or zero to
skip the search pattern prompt, or leave the search pattern blank (by pressing
~uESC~U at the prompt) to bypass the "grep" filtering.  Additionally, when invoking
the "queryReplaceAll" macro, you may limit the buffers to search to just the
ones found by "findFiles" by using a negative numeric prefix or zero.  (The
"queryReplaceAll" and "findFiles" macros are loaded from the site startup file
"memacs.ms".)

Note that pattern match and replacement operations may also be performed in
MScript on buffer lines or arbitrary text.  The ~u=~~~U and ~u!~~~U operators do RE
comparisons, the "index" function locates a character, a plain text pattern, or
an RE pattern in a string, and the "sub" function performs search and replace on
a string using the specified plain text or RE pattern.

Note also that when pattern matching is performed with the ~u=~~~U operator, the
"index" function, or any of the search and replace commands, the string and
groups that are matched (whether in a buffer or a string) are available via the
"match" function.
