~bUser Input~0

It is possible to get user input from a script by using the ~uprompt~U function,
which displays a prompt on the message line, reads a response, and returns the
result.  When using the function, note the following:

    *   It accepts one to four arguments in the following order:

            1.  A prompt string, which may be ~unil~U or a null string.
            2.  A default value, which may be ~unil~U, the ASCII value of a
                character, an integer, or a string (including a null string),
                depending on the prompt type.
            3.  A prompt type, specified as a single-character string.
            4.  An input delimiter, specified in the same format as a key
                binding.

    *   The first argument is required; all other arguments are optional.
        However, no arguments may be skipped, and if the prompt type is 'o' or
        'O', the second argument must be ~unil~U and the fourth argument is not
        allowed.

    *   If n <= 0, characters are not echoed during input; however, line editing
        and navigation keys may still be entered (in the blind) and will have
        their usual effect.  If n >= 0, terminal attributes are enabled in the
        prompt string that is displayed on the message line.

    *   If the prompt string begins with a letter, a colon and a space are
        appended to the string before the user is prompted for input; otherwise,
        the prompt string is used as is.  However, any leading quote character
        (~u'~U or ~u"~U) is stripped off first and any trailing white space is moved to
        the very end of the final prompt string that is built.  Hence, the
        addition of the ": " string may be suppressed by prepending a quote
        character to any prompt string beginning with a letter.

    *   If the prompt type is 'o' or 'O', a single keystroke (for 'o') or a key
        sequence (for 'O') is read and returned verbatim in key-binding format,
        including ~uRTN~U and ~uC-SPC~U.  If the prompt type is not 'o' or 'O', the
        following rules apply:

            -   If a non-nil default value is specified (including a null
                string), it is displayed after the prompt string between square
                brackets [ ] if the prompt type is 'c', and must be an ASCII
                character in that case; otherwise, it must be string or integer
                and is stored in the input buffer in string form as the initial
                value to be returned.  The default value may also be specified
                as ~unil~U for none (the default).

            -   A key literal is returned for types 'o' and 'O'; otherwise, if
                the user enters just the delimiter key, the default value is
                returned as an ASCII character if it exists and the prompt type
                is 'c'; otherwise, ~unil~U is returned.  If the user presses ~uC-SPC~U
                at any time, a null string is returned instead (or a null
                character if the prompt type is 'c'); otherwise, the string in
                the input buffer is returned when the delimiter key is entered.

    *   The type argument provides input options and is specified as an optional
        ~u^~U character plus one option letter, as follows:

            ^       Disable auto-completion; that is, wait for the delimiter to
                    be entered before returning.  Must be the first character of
                    the type argument.
            b       Enable buffer name completion during input.
            c       Read a single character (one keystroke) and return it as an
                    8-bit integer.  ~uC-q~U, ~uRTN~U, ~uC-j~U, and ~uC-SPC~U can be quoted with
                    ~uC-q~U to enter the key in raw form.
            f       Enable filename completion during input.
            K       Enable kill ring access during input.
            o       Read one keystroke and return it verbatim in key binding
                    format.
            O       Read one key sequence and return it verbatim in key binding
                    format.
            R       Enable replace ring access during input.
            S       Enable search ring access during input.
            s       Read a string without completion (the default).
            V       Enable variable name completion during input and include
                    all system and global variables.
            v       Enable variable name completion during input, and include
                    all system and global variables except read-only system
                    variables and global variables that begin with a capital
                    letter.

    *   The portion of the message line from the end of the prompt string (if
        any) to the right edge of the screen is the "input area".  The cursor
        will stay in this area at all times during input.  The input line will
        be automatically scrolled right or left as needed to keep the cursor in
        view as characters are entered or the cursor is moved.  If the line is
        scrolled to the left, a ~u$~U character will appear at the beginning of the
        input area as an indicator.  Likewise, if the input text extends beyond
        the right edge of the screen, a ~u$~U character will appear at the end of
        the input area.  Supported line editing and navigation keys are:

            ~uC-b~U or ~uleft-arrow~U           Move cursor backward one character.
            ~uC-f~U or ~uright-arrow~U          Move cursor forward one character.
            ~uC-a~U                         Move cursor to beginning of line.
            ~uC-p~U or ~uup-arrow~U             If prompt type is 'K', 'R', or 'S',
                                        replace input with next older entry from
                                        the corresponding ring, beginning with
                                        the top entry; otherwise, move cursor to
                                        beginning of line.
            ~uC-e~U                         Move cursor to end of line.
            ~uC-n~U or ~udown-arrow~U           If prompt type is 'K', 'R', or 'S',
                                        replace input with next newer entry from
                                        the corresponding ring, beginning with
                                        the bottom entry; otherwise, move cursor
                                        to end of line.
            ~uDEL~U                         Delete backward one character.
            ~uC-d~U                         Delete forward one character.
            ~uC-u~U                         Erase line.
            ~uC-k~U                         Delete text from cursor to end of line.
            ~uC-q~U                         Quote next character entered; that is,
                                        read it verbatim.
            ~uTAB~U                         Perform a completion on current text if
                                        a completion prompt type was specified;
                                        otherwise, insert a tab character.
            ~uC-SPC~U                       Erase line and return a null char result
                                        if prompt type is 'c'; otherwise, return
                                        a null string result.

    *   The input delimiter may be specified when the prompt type is not 'o' or
        'O'.  It can be ~unil~U or "RTN", either of which specifies the default
        delimiter (the ~ureturn~U key), or a different key (for example, the ~uesc~U
        key, coded as "ESC") so that ~ureturn~U can be entered as part of the input
        string.
