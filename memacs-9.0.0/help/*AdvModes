~bModes~0

As discussed previously, MightEMacs uses ~bglobal~0 and ~bbuffer~0 modes to activate and
deactivate features during the editing session.  Following is a list of all
modes and a detailed description of each:

GLOBAL MODES

    ~bASave~0       Automatically save all changed buffers (including hidden, non-
                macro ones) after $autoSave keystrokes have been entered.  If
                $autoSave is set to zero, this mode is disabled and cannot be
                reenabled until $autoSave is set to a value greater than zero.
    ~bBak~0         When saving a buffer to disk, if the file already exists and
                "file.bak" does not exist, rename the existing file to
                "file.bak" before saving the buffer.  Otherwise, overwrite any
                existing file.
    ~bClob~0        Allow macros to be "clobbered"; that is, recreated.  When
                enabled, any macro buffer of the same name as a macro being
                defined will be silently overwritten with the new macro's
                contents; otherwise, the definition will fail and an error will
                be displayed.
    ~bExact~0       Perform case-sensitive buffer searches by default.  This can be
                overridden by appending the "i" (ignore) option character to the
                search pattern.
    ~bHScrl~0       When the displayed length of the current line in the current
                window is greater than the terminal width and the point is moved
                past the right edge of the screen, scroll all lines in the
                window simultaneously; otherwise, scroll just the current line.
    ~bMsg~0         Enable the display of messages on the message line.  This mode
                can be disabled in a script to suppress extraneous messages
                (which flicker on the message line) during script execution.
                However, the mode is always enabled when control is returned to
                the user just prior to reading the next key or key sequence.
    ~bRegexp~0      Perform regular expression buffer searches by default.  This
                can be overridden by appending the "p" (plain) option character
                to the search pattern.
    ~bSafe~0        When saving a buffer to disk, do the following:
                    1.  Write the buffer to a temporary file.
                    2.  Delete any existing file of the same name as the buffer's
                        filename.
                    3.  Rename the temporary file to the buffer's filename.
                This eliminates the possibility of data loss if an OS error
                occurs when the file is opened for output or written.
    ~bWkDir~0       Display the current working directory on the mode line at the
                bottom of the screen if room is available.

BUFFER MODES

    ~bC~0           Load C toolbox macros and enable automatic indentation and fence
                matching for C source code when the ~ureturn~U key or a right brace,
                bracket, or parenthesis is typed.  When a right fence is typed,
                the matching fence character is highlighted briefly with the
                cursor.
    ~bCol~0         Display column number of point on mode line in form "C:n", where
                n is the column number.
    ~bLine~0        Display line number of point on mode line in form "L:n", where
                n is the line number.
    ~bMemacs~0      Load MightEMacs toolbox macros and enable automatic indentation
                and fence matching for MightEMacs script when the ~ureturn~U key or
                a right brace, bracket, or parenthesis is typed.  When a right
                fence is typed, the matching fence character is highlighted
                briefly with the cursor.
    ~bOver~0        Overwrite columns when typing.  Hard tabs are replaced only
                when the point is at a column immediately preceding a tab stop.
    ~bPerl~0        Enable automatic indentation and fence matching for Perl script
                when the ~ureturn~U key or a right brace, bracket, or parenthesis
                is typed.  When a right fence is typed, the matching fence
                character is highlighted briefly with the cursor.
    ~bRdOnly~0      Buffer is in read-only mode and cannot be modified.
    ~bRepl~0        Replace characters when typing.  Hard tabs are replaced just
                like any other character.
    ~bRuby~0        Load Ruby toolbox macros and enable automatic indentation and
                fence matching for Ruby script when the ~ureturn~U key or a right
                brace, bracket, or parenthesis is typed.  When a right fence is
                typed, the matching fence character is highlighted briefly with
                the cursor.
    ~bShell~0       Enable automatic indentation and fence matching for Shell script
                when the ~ureturn~U key or a right brace, bracket, or parenthesis
                is typed.  When a right fence is typed, the matching fence
                character is highlighted briefly with the cursor.
    ~bWrap~0        Wrap words to the next line automatically as you type.  (See the
                ~bLine Wrapping~0 section for details.)
    ~bXIndt~0       Insert an additional tab before a right "fence"; that is, the
                character or keyword that ends a block in the programming
                language whose mode is also enabled (C, Memacs, Perl, Ruby, or
                Shell).  For example, an extra tab would be inserted before a
                ~u}~U character in C source code and before the ~uend~U keyword
                in Ruby script.  This mode is automatically enabled for all
                programming language modes listed in the $ExtraIndent global
                variable, which is set in the "site.mm" startup file.

Note that when the "Over" or "Repl" buffer mode is enabled, non-tab characters
are replaced as you type; that is, the "self insert" pseudo-command deletes the
character at point before inserting the new one.  You can force an "insert"
however, by using a negative numeric prefix.  For example, if you entered ~#uC-_ x~U,
the letter ~ux~U would be ~binserted~0 into the text, overriding the "Over" and "Repl"
buffer modes.  If you entered ~#uC-_ 3 x~U, three copies would be inserted.  This
works for all characters bound to self insert.
